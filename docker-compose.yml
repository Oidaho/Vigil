version: "3.8"

x-common-env: &common-env
  db_user: ...
  db_password: ...
  db_hostname: ...

services:
  postgres:
    image: postgres:17.2
    environment:
      POSTGRES_USER: ...
      POSTGRES_PASSWORD: ...
      POSTGRES_DB: ...
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      vigil_network:
        ipv4_address: 172.20.0.2
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vigil -d bot"]
      interval: 5s
      timeout: 5s
      retries: 10

  bot:
    container_name: bot
    build:
      context: ./bot
      dockerfile: Dockerfile
    environment:
      <<: *common-env
      debug_mode: ...
      bot_group_id: ...
      bot_acces_token: ...
    volumes:
      - ./db:/app/db
      - ./config:/app/config
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      vigil_network:
        ipv4_address: 172.20.0.3
    healthcheck:
      test: ["CMD", "echo", "hello, world!"]
      interval: 10s
      timeout: 5s
      retries: 10

  web:
    container_name: web
    build: 
      context: ./web
      dockerfile: Dockerfile
    environment:
      <<: *common-env
      web_admin_id: ...
      web_password: ...
      web_jwt_secret: ...  
    ports:
      - "7212:7212"
    volumes:
      - ./db:/app/db
      - ./config:/app/config
    depends_on:
      postgres:
        condition: service_healthy
      bot:
        condition: service_healthy
    networks:
      vigil_network:
        ipv4_address: 172.20.0.4
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7212/health"]
      interval: 10s
      timeout: 5s
      retries: 10

networks:
  vigil_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24

volumes:
  postgres_data:
    driver: local