version: "3.8"

x-postgres-env: &postgres-env
  POSTGRES_USER: "..."
  POSTGRES_PASSWORD: "..."
  POSTGRES_DB: "..."

x-db-env: &db-env
  db_user: "..."
  db_password: "..."
  db_database: "..."
  db_hostname: "172.20.0.2"
  db_port: ...

x-bot-env: &bot-env
  bot_group_id: ...
  bot_acces_token: "..."
  bot_command_prefix: "..."

x-web-env: &web-env
  web_admin_id: ...
  web_password: "..."
  web_jwt_secret: "..." 
  web_jwt_algorithm: "..."
  web_jwt_access_token_lifetime: ...

x-joint-env:  &joint-env
  debug_mode: ...
  project_name: "..."
  bot_max_sanction_points: ...




services:
  postgres:
    image: postgres:17.2
    container_name: db
    environment:
      <<: *postgres-env
    ports:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      vigil_network:
        ipv4_address: 172.20.0.2
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vigil -d bot"]
      interval: 5s
      timeout: 5s
      retries: 10

  bot:
    container_name: bot
    build:
      context: ./bot
      dockerfile: Dockerfile
    environment:
      <<: [*db-env, *bot-env, *joint-env]
    volumes:
      - ./db:/app/db
      - ./config:/app/config
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      vigil_network:
        ipv4_address: 172.20.0.3
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "echo", "hello, world!"]
      interval: 10s
      timeout: 5s
      retries: 10

  web:
    container_name: web
    build: 
      context: ./web
      dockerfile: Dockerfile
    environment:
      <<: [*db-env, *web-env, *joint-env]
    ports:
      - "7212:7212"
    volumes:
      - ./db:/app/db
      - ./config:/app/config
    depends_on:
      postgres:
        condition: service_healthy
      bot:
        condition: service_healthy
    networks:
      vigil_network:
        ipv4_address: 172.20.0.4
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7212/health"]
      interval: 10s
      timeout: 5s
      retries: 10

networks:
  vigil_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24

volumes:
  postgres_data:
    driver: local