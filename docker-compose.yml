version: "3.8"

services:
  postgres:
    image: postgres:17.2
    container_name: db
    ports:
      - "5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      internal:
        ipv4_address: 172.20.0.2
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vigil -d bot"]
      interval: 5s
      timeout: 5s
      retries: 10

  nginx:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: proxy
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    env_file:
      - .env
    volumes:
      - nginx_data:/data
      - letsencrypt_data:/etc/letsencrypt
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      internal:
        ipv4_address: 172.20.0.3
    restart: unless-stopped

  bot:
    container_name: bot
    build:
      context: ./bot
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./db:/app/db
      - ./config:/app/config
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      internal:
        ipv4_address: 172.20.0.4
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "echo", "hello, world!"]
      interval: 10s
      timeout: 5s
      retries: 10

  web:
    container_name: web
    build: 
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "7212:7212"
    env_file:
      - .env
    volumes:
      - ./db:/app/db
      - ./config:/app/config
    depends_on:
      postgres:
        condition: service_healthy
      bot:
        condition: service_healthy
    networks:
      internal:
        ipv4_address: 172.20.0.5
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7212/health"]
      interval: 10s
      timeout: 5s
      retries: 10


networks:
  internal:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24

volumes:
  postgres_data:
    driver: local
  nginx_data:
    driver: local
  letsencrypt_data:
    driver: local